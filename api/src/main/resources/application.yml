logging:
  level:
    br.edu.unisinos.uni4life: ${LOG_LEVEL_API:DEBUG}
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL:DEBUG}
    org.springframework.boot: ${LOG_LEVEL_SPRING:INFO}
  pattern:
    console: '%d{HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n'
  charset:
    console: UTF-8

security:
  accessTokenValidititySeconds: ${TOKEN_VALIDATION_TIEMOUT:3600} # 1 hora
  refreshTokenValiditySeconds: ${TOKEN_VALIDATION_TIEMOUT:18000} # 5 horas
  oauth2:
    client:
      client-id: ${SECURITY_CLIENT:uni4life-client}
      client-secret: ${SECURITY_SECRET:uni4life-secret}

server:
  servlet:
    context-path: /uni4life
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: uni4life
  messages:
    basename: messages
  jackson:
    deserialization:
      READ_UNKNOWN_ENUM_VALUES_AS_NULL: true
    generator:
      IGNORE_UNKNOWN: true
    time-zone: America/Sao_Paulo
  h2:
    console:
      enabled: true
      path: /banco
      settings:
        trace: false
        web-allow-others: true
  datasource:
    continue-on-error: true
    driverClassName: org.h2.Driver
    username: ${BD_USERNAME:root}
    password: ${BD_PASSWORD:root}
    url: jdbc:h2:mem:uni4life
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create

springfox:
  documentation:
    info:
      title: Uni4life
      description: Documentação dos serviços da api do Uni4life
      version: 1.0.0
    base-package: br.edu.unisinos.uni4life.controller
    apis:
      - name: UsuarioApi
        description: Serviços relacionados aos usuários.
      - name: ConteudoApi
        description: Serviços relacionados aos conteúdos da plataforma.
      - name: SeguidoresApi
        description: Serviçoes relacionados ao relacionamento entre usuários.

storage:
  path: ${STORAGE_PATH:/api/storage}
